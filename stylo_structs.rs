/* automatically generated by rust-bindgen */

pub use self::root::*;
pub use self::root::mozilla::*;
pub use self::root::mozilla::css::*;
pub use self::root::mozilla::dom::*;
use atomic_refcell::AtomicRefCell;
use data::ElementData;
pub type ServoUnsafeCell<T> = ::std::cell::UnsafeCell<T>;
pub type ServoCell<T> = ::std::cell::Cell<T>;
pub type ServoNodeData = AtomicRefCell<ElementData>;

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct RefPtr<T> {
        pub a: T,
    }
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct nsMainThreadPtrHolder<T> {
        pub a: T,
    }
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct nsMainThreadPtrHandle {
        pub mPtr: root::RefPtr<root::nsMainThreadPtrHolder<T>>,
    }
}
