/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct a<__anon_named_type_0> {
        pub _address: u8,
        pub _phantom_0: ::std::marker::PhantomData<__anon_named_type_0>,
    }
    impl <__anon_named_type_0> Default for a<__anon_named_type_0> {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
    pub type b<T> = root::a<T>;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct Rooted<T> {
        pub c: root::b<T>,
    }
    impl <T> Default for Rooted<T> {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
}
